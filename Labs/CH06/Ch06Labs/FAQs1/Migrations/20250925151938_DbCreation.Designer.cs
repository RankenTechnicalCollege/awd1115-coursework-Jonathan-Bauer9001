// <auto-generated />
using FAQs1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FAQs1.Migrations
{
    [DbContext(typeof(FAQsContext))]
    [Migration("20250925151938_DbCreation")]
    partial class DbCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FAQs1.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "general",
                            Name = "General"
                        },
                        new
                        {
                            CategoryId = "history",
                            Name = "History"
                        });
                });

            modelBuilder.Entity("FAQs1.Models.FAQ", b =>
                {
                    b.Property<int>("FAQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FAQId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FAQId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TopicId");

                    b.ToTable("FAQs");

                    b.HasData(
                        new
                        {
                            FAQId = 1,
                            Answer = "ASP.NET Core is a cross-platform, high-performance framework for building modern, cloud-based, Internet-connected applications.",
                            CategoryId = "general",
                            Question = "What is ASP.NET Core?",
                            TopicId = "asp"
                        },
                        new
                        {
                            FAQId = 2,
                            Answer = "ASP.NET Core 1.0 was released on June 7, 2016.",
                            CategoryId = "history",
                            Question = "When was ASP.NET Core released?",
                            TopicId = "asp"
                        },
                        new
                        {
                            FAQId = 3,
                            Answer = "Blazor is a framework for building interactive client-side web UI with .NET.",
                            CategoryId = "general",
                            Question = "What is Blazor?",
                            TopicId = "blz"
                        },
                        new
                        {
                            FAQId = 5,
                            Answer = "Blazor was released in May 14, 2020 as part of .NET 5.",
                            CategoryId = "history",
                            Question = "When was Blazor released?",
                            TopicId = "blz"
                        },
                        new
                        {
                            FAQId = 4,
                            Answer = "Entity Framework (EF) is an open source object-relational mapping (ORM) framework for ADO.NET.",
                            CategoryId = "general",
                            Question = "What is Entity Framework?",
                            TopicId = "ef"
                        },
                        new
                        {
                            FAQId = 6,
                            Answer = "Entity Framework 1.0 was released in August 11, 2008.",
                            CategoryId = "history",
                            Question = "When was Entity Framework released?",
                            TopicId = "ef"
                        });
                });

            modelBuilder.Entity("FAQs1.Models.Topic", b =>
                {
                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            TopicId = "asp",
                            Name = "ASP.NET Core"
                        },
                        new
                        {
                            TopicId = "blz",
                            Name = "Blazor"
                        },
                        new
                        {
                            TopicId = "ef",
                            Name = "Entity Framework"
                        });
                });

            modelBuilder.Entity("FAQs1.Models.FAQ", b =>
                {
                    b.HasOne("FAQs1.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FAQs1.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Topic");
                });
#pragma warning restore 612, 618
        }
    }
}
